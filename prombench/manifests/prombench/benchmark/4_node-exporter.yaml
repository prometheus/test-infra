# On using Node affinity:
# 1. node-exporter is deployed on main-node ( DaemonSet )
# 2. node-exporter is deployed on nodes-{{ .PR_NUMBER }} ( DaemonSet )
# 3. node-exporter is deployed on prometheus-{{ .PR_NUMBER }} ( Deployment )
# node-exporter on prometheus-{{ .PR_NUMBER }} is deployed after deploying prometheus to use podAffinity
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-exporter-prometheus-test-{{ normalise .RELEASE }}
  namespace: prombench-{{ .PR_NUMBER }}
spec:
  selector:
    matchLabels:
      app: node-exporter
      node: test-{{ normalise .RELEASE }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: node-exporter
        node: test-{{ normalise .RELEASE }}
      name: node-exporter
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: prometheus
                operator: In
                values:
                - test-{{ normalise .RELEASE }}
            topologyKey: node-name
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      hostNetwork: true
      hostPID: true
      nodeSelector:
        node-name: prometheus-{{ .PR_NUMBER }}
      containers:
      - image: quay.io/prometheus/node-exporter:v1.8.1
        args:
        - "--path.procfs=/host/proc"
        - "--path.sysfs=/host/sys"
        - "--path.rootfs=/host/root"
        - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run|home|tmp|var)($|/)"
        - "--collector.diskstats.ignored-devices=^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\\d+n\\d+p)\\d+$"
        name: node-exporter
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: scrape
        volumeMounts:
        - name: proc
          readOnly:  true
          mountPath: /host/proc
        - name: sys
          readOnly: true
          mountPath: /host/sys
        - name: root
          mountPath: /host/root
          readOnly: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-exporter-prometheus-test-pr-{{ .PR_NUMBER }}
  namespace: prombench-{{ .PR_NUMBER }}
spec:
  selector:
    matchLabels:
      app: node-exporter
      node: test-pr-{{ .PR_NUMBER }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: node-exporter
        node: test-pr-{{ .PR_NUMBER }}
      name: node-exporter
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: prometheus
                operator: In
                values:
                - test-pr-{{ .PR_NUMBER }}
            topologyKey: node-name
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      hostNetwork: true
      hostPID: true
      nodeSelector:
        node-name: prometheus-{{ .PR_NUMBER }}
      containers:
      - image: quay.io/prometheus/node-exporter:v1.8.1
        args:
        - "--path.procfs=/host/proc"
        - "--path.sysfs=/host/sys"
        - "--path.rootfs=/host/root"
        - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run|home|tmp|var)($|/)"
        - "--collector.diskstats.ignored-devices=^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\\d+n\\d+p)\\d+$"
        name: node-exporter
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: scrape
        volumeMounts:
        - name: proc
          readOnly:  true
          mountPath: /host/proc
        - name: sys
          readOnly: true
          mountPath: /host/sys
        - name: root
          mountPath: /host/root
          readOnly: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter-nodes
  namespace: prombench-{{ .PR_NUMBER }}
spec:
  selector:
    matchLabels:
      app: node-exporter
      node: web-server
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: node-exporter
        node: web-server
      name: node-exporter
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      hostNetwork: true
      hostPID: true
      nodeSelector:
        node-name: nodes-{{ .PR_NUMBER }}
      containers:
      - image: quay.io/prometheus/node-exporter:v1.8.1
        args:
        - "--path.procfs=/host/proc"
        - "--path.sysfs=/host/sys"
        - "--path.rootfs=/host/root"
        - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run|home|tmp|var)($|/)"
        - "--collector.diskstats.ignored-devices=^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\\d+n\\d+p)\\d+$"
        name: node-exporter
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: scrape
        volumeMounts:
        - name: proc
          readOnly:  true
          mountPath: /host/proc
        - name: sys
          readOnly: true
          mountPath: /host/sys
        - name: root
          mountPath: /host/root
          readOnly: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: prombench-{{ .PR_NUMBER }}
  labels:
    app: node-exporter
    monitored: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: metrics
    port: 80
    targetPort: scrape
    protocol: TCP
  selector:
    app: node-exporter
