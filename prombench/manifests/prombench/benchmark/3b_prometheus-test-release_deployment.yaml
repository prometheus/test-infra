apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-test-{{ normalise .RELEASE }}
  namespace: prombench-{{ .PR_NUMBER }}
  labels:
    app: prometheus
    prometheus: test-{{ normalise .RELEASE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      prometheus: test-{{ normalise .RELEASE }}
  template:
    metadata:
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: prometheus
        prometheus: test-{{ normalise .RELEASE }}
    spec:
      serviceAccountName: prometheus
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - prometheus
      securityContext:
        runAsUser: 0
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:{{ .RELEASE }}
        imagePullPolicy: Always
        command: [ "/bin/prometheus" ]
        args: [
          "--web.external-url=http://{{ .DOMAIN_NAME }}/{{ .PR_NUMBER }}/prometheus-release",
          "--storage.tsdb.path=/prometheus",
          "--config.file=/etc/prometheus/prometheus.yml",
          "--log.level=debug"
        ]
        resources:
          requests:
            cpu: 2
            memory: 20Gi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: instance-ssd
          mountPath: /prometheus
        ports:
        - name: prom-web
          containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-test
      - name: instance-ssd
        hostPath:
          # /mnt is where GKE keeps it's SSD.
          path: /mnt/disks/ssd0
      terminationGracePeriodSeconds: 300
      nodeSelector:
        node-name: prometheus-{{ .PR_NUMBER }}
        isolation: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-test-{{ normalise .RELEASE }}
  namespace: prombench-{{ .PR_NUMBER }}
  labels:
    app: prometheus
    prometheus: test-{{ normalise .RELEASE }}
spec:
  ports:
  - name: prom-web
    port: 80
    targetPort: prom-web
  selector:
    app: prometheus
    prometheus: test-{{ normalise .RELEASE }}
